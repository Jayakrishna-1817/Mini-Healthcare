{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\smano\\\\Downloads\\\\mini-healthcare-app\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Check for token in localStorage on app load\n    const storedToken = localStorage.getItem('token');\n    const storedUser = localStorage.getItem('user');\n    if (storedToken && storedUser && storedUser !== 'undefined' && storedUser !== 'null') {\n      try {\n        setToken(storedToken);\n        setUser(JSON.parse(storedUser));\n      } catch (error) {\n        console.error('Error parsing stored user data:', error);\n        // Clear corrupted data\n        localStorage.removeItem('token');\n        localStorage.removeItem('user');\n      }\n    }\n    setIsLoading(false);\n  }, []);\n  const login = (tokenData, userData) => {\n    setToken(tokenData);\n    setUser(userData);\n    localStorage.setItem('token', tokenData);\n    localStorage.setItem('user', JSON.stringify(userData));\n  };\n  const logout = () => {\n    setToken(null);\n    setUser(null);\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  };\n  const value = {\n    token,\n    user,\n    isLoading,\n    login,\n    logout,\n    isAuthenticated: !!token\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"ZLXmwBzIl9DmLysvk9GZ+SP3LK8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","token","setToken","user","setUser","isLoading","setIsLoading","storedToken","localStorage","getItem","storedUser","JSON","parse","error","console","removeItem","login","tokenData","userData","setItem","stringify","logout","value","isAuthenticated","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/smano/Downloads/mini-healthcare-app/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [token, setToken] = useState(null);\r\n  const [user, setUser] = useState(null);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    // Check for token in localStorage on app load\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedUser = localStorage.getItem('user');\r\n    \r\n    if (storedToken && storedUser && storedUser !== 'undefined' && storedUser !== 'null') {\r\n      try {\r\n        setToken(storedToken);\r\n        setUser(JSON.parse(storedUser));\r\n      } catch (error) {\r\n        console.error('Error parsing stored user data:', error);\r\n        // Clear corrupted data\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('user');\r\n      }\r\n    }\r\n    setIsLoading(false);\r\n  }, []);\r\n\r\n  const login = (tokenData, userData) => {\r\n    setToken(tokenData);\r\n    setUser(userData);\r\n    localStorage.setItem('token', tokenData);\r\n    localStorage.setItem('user', JSON.stringify(userData));\r\n  };\r\n\r\n  const logout = () => {\r\n    setToken(null);\r\n    setUser(null);\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  };\r\n\r\n  const value = {\r\n    token,\r\n    user,\r\n    isLoading,\r\n    login,\r\n    logout,\r\n    isAuthenticated: !!token\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE9E,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMO,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGR,UAAU,CAACK,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMiB,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACjD,MAAMC,UAAU,GAAGF,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IAE/C,IAAIF,WAAW,IAAIG,UAAU,IAAIA,UAAU,KAAK,WAAW,IAAIA,UAAU,KAAK,MAAM,EAAE;MACpF,IAAI;QACFR,QAAQ,CAACK,WAAW,CAAC;QACrBH,OAAO,CAACO,IAAI,CAACC,KAAK,CAACF,UAAU,CAAC,CAAC;MACjC,CAAC,CAAC,OAAOG,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,iCAAiC,EAAEA,KAAK,CAAC;QACvD;QACAL,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;QAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;MACjC;IACF;IACAT,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMU,KAAK,GAAGA,CAACC,SAAS,EAAEC,QAAQ,KAAK;IACrChB,QAAQ,CAACe,SAAS,CAAC;IACnBb,OAAO,CAACc,QAAQ,CAAC;IACjBV,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEF,SAAS,CAAC;IACxCT,YAAY,CAACW,OAAO,CAAC,MAAM,EAAER,IAAI,CAACS,SAAS,CAACF,QAAQ,CAAC,CAAC;EACxD,CAAC;EAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;IACnBnB,QAAQ,CAAC,IAAI,CAAC;IACdE,OAAO,CAAC,IAAI,CAAC;IACbI,YAAY,CAACO,UAAU,CAAC,OAAO,CAAC;IAChCP,YAAY,CAACO,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAED,MAAMO,KAAK,GAAG;IACZrB,KAAK;IACLE,IAAI;IACJE,SAAS;IACTW,KAAK;IACLK,MAAM;IACNE,eAAe,EAAE,CAAC,CAACtB;EACrB,CAAC;EAED,oBACET,OAAA,CAACC,WAAW,CAAC+B,QAAQ;IAACF,KAAK,EAAEA,KAAM;IAAAvB,QAAA,EAChCA;EAAQ;IAAA0B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAC5B,GAAA,CApDWF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}